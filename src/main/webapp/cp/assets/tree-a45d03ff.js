const t=e=>{const r=[],n={};return e.forEach(l=>{n[l.id]=l}),e.forEach(l=>{const c=n[l.parentId];c?c.children?c.children.push(l):c.children=[l]:r.push(l)}),r},s=(e,r,n)=>{r.forEach(l=>{const c={...l,depth:n};e.push(c),c.children&&(s(e,c.children,n+1),c.children=void 0)})},a=e=>{const r=[];return s(r,e,0),r},f=(e,r)=>{for(let n=0,l=e.length;n<l;n+=1){let c;if(e[n].children&&(c=f(e[n].children,r),c)||(c=e.find(r),c))return c}},i=(e,r,n)=>(e.forEach(l=>{(n||l.id===r)&&(l.disabled=!0),l.children&&i(l.children,r,l.disabled)}),e),b=(e,r)=>r?i(e,r,!1):e,d=e=>(e.forEach(r=>{r.children?(r.disabled=r.children.length>0,d(r.children)):r.disabled=!1}),e),o=(e,r)=>(!r||r.length<=0||e.forEach(n=>{r.includes(n.id)&&(n.disabled=!0),n.children&&o(n.children,r)}),e),h=(e,r)=>(e.forEach(n=>{r.includes(n.id)||(n.disabled=!0),n.children&&h(n.children,r)}),e),T=(e,r)=>r?h(e,r):e,u=(e,r)=>{let n=!0;return e.forEach(l=>{!(l.children&&l.children.length>0)&&!r.includes(l.key)&&!r.includes("*")?l.disabled=!0:n=!1,l.children&&(l.disabled=u(l.children,r))}),n};export{o as a,b,T as c,d,u as e,a as f,f as g,t};
